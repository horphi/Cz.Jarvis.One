API endpoint list for POS system:

### 1. Product Catalog
- **GET /categories**  
  *List all product categories*
- **POST /categories**  
  *Create new category (e.g., Clothing, Accessories)*
- **GET /products**  
  *List all products with variants (size/color)*
- **POST /products**  
  *Create new product with variants*
- **GET /products/{id}/variants**  
  *Get variant details for a product*

### 2. Barcode Integration
- **GET /products/barcode/{barcode}**  
  *Look up product by barcode (returns product + variant details)*
- **POST /products/{id}/barcodes**  
  *Assign new barcode to product variant*

### 3. Checkout System
- **POST /carts**  
  *Create new shopping cart*
- **POST /carts/{cartId}/items**  
  *Add item to cart (with variant selection)*
- **POST /carts/{cartId}/checkout**  
  *Process payment + complete sale (creates order)*
- **GET /orders/{orderId}**  
  *Retrieve order details*

### 4. Inventory Management
- **POST /locations**  
  *Create new inventory location (e.g., Store A, Warehouse B)*
- **POST /inventory/adjustments**  
  *Adjust stock levels (with reason: restock, damage, etc.)*
- **POST /inventory/transfers**  
  *Transfer stock between locations*
- **GET /products/{id}/inventory**  
  *Check stock levels across locations*
- **GET /locations/{id}/inventory**  
  *View inventory for specific location*

### 5. Reporting & Analytics
- **GET /reports/sales/daily?date=YYYY-MM-DD**  
  *Generate daily sales report*
- **GET /reports/sales?start=YYYY-MM-DD&end=YYYY-MM-DD**  
  *Sales data within date range*
- **GET /reports/products/top-selling**  
  *List best-selling products*
- **GET /reports/profit-margin?timeframe=weekly**  
  *Profit margin analysis (daily/weekly/monthly)*

### 6. Additional Core Endpoints
- **GET /orders**  
  *List all orders (with date/customer filters)*
- **POST /orders/{orderId}/returns**  
  *Process product returns*
- **GET /variants/{id}/stock**  
  *Check stock for specific variant*

### 7. Supplier & Purchase Order Management
- **POST /suppliers**  
  *Create new supplier (name, contact info, payment terms)*
- **GET /suppliers**  
  *List all suppliers*
- **POST /purchase-orders**  
  *Create purchase order (PO) with supplier, products, quantities, and cost prices*
- **POST /purchase-orders/{id}/receive**  
  *Receive shipment against PO - updates inventory + calculates landed costs*
- **GET /purchase-orders/{id}**  
  *View PO details with receipt history*
- **GET /locations/{id}/pending-orders**  
  *List incoming shipments for a location*

---

### Key Implementation Notes:
1. **Barcode Flow**  
   - Frontend captures barcode → Calls `/products/barcode/{barcode}`  
   - Returns matched product/variant → Added to cart via `/carts/{cartId}/items`

2. **Inventory Tracking**  
   - Automatic deduction on checkout completion (`/carts/{cartId}/checkout`)  
   - Manual adjustments via `/inventory/adjustments`

3. **Profit Calculation**  
   - Reports use `(SalePrice - CostPrice)` per variant  
   - Cost price stored in product variant data

4. **Variant Management**  
   - Each variant has unique SKU/barcode  
   - Inventory tracked per variant/location

5. **Daily Reports**  
   - Includes: Total sales, profit margins, payment methods, top products  
   - Auto-generated at EOD via cron job

### Key Process Flow for Receiving Goods:
1. **Create Supplier**  
   `POST /suppliers`  
   *{ "name": "Fashion Supplier Inc", "contact": "supply@example.com" }*

2. **Create Purchase Order**  
   `POST /purchase-orders`  
   ```json
   {
     "supplier_id": "sup_123",
     "location_id": "warehouse_1",
     "items": [
       {
         "variant_id": "var_456",
         "quantity": 50,
         "cost_price": 15.99
       }
     ]
   }
   ```

3. **Receive Shipment**  
   `POST /purchase-orders/po_789/receive`  
   ```json
   {
     "received_items": [
       {
         "variant_id": "var_456",
         "quantity_accepted": 48,
         "quantity_damaged": 2
       }
     ]
   }
   ```
   *Automatically:*
   - Adds 48 units to inventory at `warehouse_1`
   - Updates average product cost
   - Creates damaged stock record
   - Updates PO status to "Partially Received" or "Completed"

### Updated Inventory Management Endpoints:
- **GET /inventory/receivings?location=warehouse_1&date=2025-05-31**  
  *View daily received shipments*
- **GET /products/{id}/cost-history**  
  *View cost price evolution over time*

### Profit Margin Calculation Enhancement:
- **Daily sales reports** now include:
  ```json
  "profit_calculation": {
    "sale_price": 29.99,
    "current_cost": 16.50,
    "sold_quantity": 12,
    "gross_profit": 161.88
  }
  ```
  Uses weighted average cost based on received shipments

### Security Note:
- Implement role-based access control (RBAC) for:
  - Inventory managers: Full PO/receiving access
  - Cashiers: Read-only inventory visibility
